<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-05 at 11:23:30.
 */

define('SKEBUILDER_UNITTEST_PHPFOX_REPLACEMENT', SKEBUILDER_BASE_TEST . 'src' . DIRECTORY_SEPARATOR . 'replacement' . DIRECTORY_SEPARATOR);

require(SKEBUILDER_UNITTEST_PHPFOX_REPLACEMENT . 'ReplacementPhpfox.php');

class ReplacementPhpfoxTest extends PHPUnit_Framework_TestCase
{
    protected function tearDown()
    {
        // Skebuilder::delete_directory(SKEBUILDER_UNITTEST_EXPERIMENT_DIR . 'upload');
    }

    // /**
    //  * @covers XMLparser->parse
    //  */
    // public function testParseAFile()
    // {
    //  $xml_parser = new parser();
    //  $data = $xml_parser->parseSkeleton(SKEBUILDER_UNITTEST_SKELETON_DIR . 'unittest_default.xml');
    //  $data->create(SKEBUILDER_UNITTEST_EXPERIMENT_DIR);

    //  $print_visitor = new printVisitor;
    //  $data->accept($print_visitor);
    //  $this->assertTrue(count($data) > 0);
    // }


    /**
     * @covers XMLparser->parse
     */
    public function testReplacementPhpfoxModuleName()
    {
        Skebuilder::setModuleName('jobposting');
        $content = '';
        $replacement = new ReplacementPhpfox();
        $context = new Context(SKEBUILDER_UNITTEST_EXPERIMENT_DIR);
        $replacement->replace($content, $context);

        $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('jobposting', $replacement_list['[skebuilder:module_name]']);
        // var_dump(Skebuilder::getErrorMessages());
    }


    public function testReplacementPhpfoxPackageId()
    {
        Skebuilder::setPackageId('younet_jobposting');
        $content = '';
        $replacement = new ReplacementPhpfox();
        $context = new Context(SKEBUILDER_UNITTEST_EXPERIMENT_DIR);
        $replacement->replace($content, $context);

        $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('younet_jobposting', $replacement_list['[skebuilder:package_id]']);
        // var_dump(Skebuilder::getErrorMessages());
    }

    public function testReplacementPhpfoxModuleNameFirstUppercase()
    {
        Skebuilder::setModuleName('jobposting');
        $content = '';
        $replacement = new ReplacementPhpfox();
        $context = new Context(SKEBUILDER_UNITTEST_EXPERIMENT_DIR);
        $replacement->replace($content, $context);

        $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('Jobposting', $replacement_list['[skebuilder:module_name_upper_first]']);
        // var_dump(Skebuilder::getErrorMessages());
    }

    public function testReplacementBlockClassName2()
    {
        $replacement = new ReplacementPhpfox();
        $content = '';
        $context_stub = $this->getMock('Context', array(), array(''));
        $context_stub->expects($this->any())
             ->method('getListOfDirectoriesFromDirectory')
             ->will($this->returnValue(array('admincp')));

        $context_stub->expects($this->any())
             ->method('getNameOfCurrentNode')
             ->will($this->returnValue('index.php'));

        $context_stub->expects($this->any())
             ->method('getModuleName')
             ->will($this->returnValue('jobposting'));

        $replacement->replace($content, $context_stub);
         $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('Jobposting_Component_Block_Admincp_Index', $replacement_list['[skebuilder:block_class_name]']);
    }

    public function testReplacementBlockClassName3()
    {
        $replacement = new ReplacementPhpfox();
        $content = '';
        $context_stub = $this->getMock('Context', array(), array(''));
        $context_stub->expects($this->any())
             ->method('getListOfDirectoriesFromDirectory')
             ->will($this->returnValue(array('admincp', 'category')));

        $context_stub->expects($this->any())
             ->method('getNameOfCurrentNode')
             ->will($this->returnValue('add.php'));

        $context_stub->expects($this->any())
             ->method('getModuleName')
             ->will($this->returnValue('jobposting'));

        $replacement->replace($content, $context_stub);
         $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('Jobposting_Component_Block_Admincp_Category_Add', $replacement_list['[skebuilder:block_class_name]']);
    }

    public function testReplacementControllerClassName3()
    {
        $replacement = new ReplacementPhpfox();
        $content = '';
        $context_stub = $this->getMock('Context', array(), array(''));
        $context_stub->expects($this->any())
             ->method('getListOfDirectoriesFromDirectory')
             ->will($this->returnValue(array('admincp', 'category')));

        $context_stub->expects($this->any())
             ->method('getNameOfCurrentNode')
             ->will($this->returnValue('add.php'));

        $context_stub->expects($this->any())
             ->method('getModuleName')
             ->will($this->returnValue('jobposting'));

        $replacement->replace($content, $context_stub);
         $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('Jobposting_Component_Controller_Admincp_Category_Add', $replacement_list['[skebuilder:controller_class_name]']);
    }

    public function testReplacementControllerClassName4()
    {
        $replacement = new ReplacementPhpfox();
        $content = '';
        $context_stub = $this->getMock('Context', array(), array(''));
        $context_stub->expects($this->any())
             ->method('getListOfDirectoriesFromDirectory')
             ->will($this->returnValue(array('admincp', 'category')));

        $context_stub->expects($this->any())
             ->method('getNameOfCurrentNode')
             ->will($this->returnValue('job.class.php'));

        $context_stub->expects($this->any())
             ->method('getModuleName')
             ->will($this->returnValue('jobposting'));

        $replacement->replace($content, $context_stub);
         $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('Jobposting_Service_Admincp_Category_Job', $replacement_list['[skebuilder:service_class_name]']);
    }

    public function testReplacementControllerClassName5()
    {
        $replacement = new ReplacementPhpfox();
        $content = '';
        $context_stub = $this->getMock('Context', array(), array(''));
        $context_stub->expects($this->any())
             ->method('getListOfDirectoriesFromDirectory')
             ->will($this->returnValue(array('admincp', 'category')));

        $context_stub->expects($this->any())
             ->method('getNameOfCurrentNode')
             ->will($this->returnValue('job.class.php'));

        $context_stub->expects($this->any())
             ->method('getModuleName')
             ->will($this->returnValue('jobposting'));

        $replacement->replace($content, $context_stub);
         $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('admincp.category.job', $replacement_list['[skebuilder:link_to_controller]']);
    }

        
}
