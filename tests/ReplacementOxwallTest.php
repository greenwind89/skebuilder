<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-05 at 11:23:30.
 */

define('SKEBUILDER_UNITTEST_PHPFOX_REPLACEMENT', SKEBUILDER_BASE_TEST . 'src' . DIRECTORY_SEPARATOR . 'replacement' . DIRECTORY_SEPARATOR);

require(SKEBUILDER_UNITTEST_PHPFOX_REPLACEMENT . 'ReplacementOxwall.php');

class ReplacementOxwallTest extends PHPUnit_Framework_TestCase
{ 
    public function testReplacementOxwallModuleName()
    {
        $content = '';
        $replacement = new ReplacementOxwall();
        $context = new Context(SKEBUILDER_UNITTEST_EXPERIMENT_DIR);
        $context->setModuleName('ynnewsfeed');
        $replacement->replace($content, $context);

        $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('ynnewsfeed', $replacement_list['[skebuilder:module_name]']);
        // var_dump(Skebuilder::getErrorMessages());
    }

    public function testReplacementOxwallBolClassName()
    {
        $replacement = new ReplacementOxwall();
        $content = '';
        $context_stub = $this->getMock('Context', array(), array(''));
        $context_stub->expects($this->any())
             ->method('getListOfDirectoriesFromDirectory')
             ->will($this->returnValue(array('admincp')));

        $context_stub->expects($this->any())
             ->method('getNameOfCurrentNode')
             ->will($this->returnValue('action.php'));

        $context_stub->expects($this->any())
             ->method('getModuleName')
             ->will($this->returnValue('ynnewsfeed'));

        $replacement->replace($content, $context_stub);
         $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('YNNEWSFEED_BOL_Action', $replacement_list['[skebuilder:bol_class_name]']);
    }

    public function testReplacementOxwallBolClassName2()
    {
        $replacement = new ReplacementOxwall();
        $content = '';
        $context_stub = $this->getMock('Context', array(), array(''));
        $context_stub->expects($this->any())
             ->method('getListOfDirectoriesFromDirectory')
             ->will($this->returnValue(array('admincp')));

        $context_stub->expects($this->any())
             ->method('getNameOfCurrentNode')
             ->will($this->returnValue('action_dao.php'));

        $context_stub->expects($this->any())
             ->method('getModuleName')
             ->will($this->returnValue('ynnewsfeed'));

        $replacement->replace($content, $context_stub);
         $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('YNNEWSFEED_BOL_ActionDao', $replacement_list['[skebuilder:bol_class_name]']);
    }

    public function testReplacementOxwallClassClassName()
    {
        $replacement = new ReplacementOxwall();
        $content = '';
        $context_stub = $this->getMock('Context', array(), array(''));
        $context_stub->expects($this->any())
             ->method('getListOfDirectoriesFromDirectory')
             ->will($this->returnValue(array('admincp')));

        $context_stub->expects($this->any())
             ->method('getNameOfCurrentNode')
             ->will($this->returnValue('action_dao.php'));

        $context_stub->expects($this->any())
             ->method('getModuleName')
             ->will($this->returnValue('ynnewsfeed'));

        $replacement->replace($content, $context_stub);
         $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('YNNEWSFEED_CLASS_ActionDao', $replacement_list['[skebuilder:class_class_name]']);
    }

    public function testReplacementOxwallComponentClassName()
    {
        $replacement = new ReplacementOxwall();
        $content = '';
        $context_stub = $this->getMock('Context', array(), array(''));
        $context_stub->expects($this->any())
             ->method('getListOfDirectoriesFromDirectory')
             ->will($this->returnValue(array('admincp')));

        $context_stub->expects($this->any())
             ->method('getNameOfCurrentNode')
             ->will($this->returnValue('action_dao.php'));

        $context_stub->expects($this->any())
             ->method('getModuleName')
             ->will($this->returnValue('ynnewsfeed'));

        $replacement->replace($content, $context_stub);
         $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('YNNEWSFEED_CMP_ActionDao', $replacement_list['[skebuilder:component_class_name]']);
    }

    public function testReplacementOxwallControllerClassName()
    {
        $replacement = new ReplacementOxwall();
        $content = '';
        $context_stub = $this->getMock('Context', array(), array(''));
        $context_stub->expects($this->any())
             ->method('getListOfDirectoriesFromDirectory')
             ->will($this->returnValue(array('admincp')));

        $context_stub->expects($this->any())
             ->method('getNameOfCurrentNode')
             ->will($this->returnValue('action_dao.php'));

        $context_stub->expects($this->any())
             ->method('getModuleName')
             ->will($this->returnValue('ynnewsfeed'));

        $replacement->replace($content, $context_stub);
         $replacement_list = $replacement->getReplacementList();
        $this->assertEquals('YNNEWSFEED_CTRL_ActionDao', $replacement_list['[skebuilder:controller_class_name]']);
    }
}
