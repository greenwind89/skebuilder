<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-04-05 at 11:23:30.
 */
class skebuilderTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var skebuilder
     */
    protected $skebuilder;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->skebuilder = new skebuilder;
    }

    private function getNameOfAllChildrenOfANode($children)
    {
        $names = array();
        foreach ($children as $child) {
            $names[] = $child->getName();
        }

        return $names;
    }
    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        Skebuilder::delete_directory(SKEBUILDER_UNITTEST_EXPERIMENT_DIR . 'folder_test');
    }

    /**
     * @covers Class::Method
     */
    public function testBuildTreeFromStructureHaving1Element()
    {
        $structure = array('test');
        $root_node = new FolderNode('folder_test');
        $this->skebuilder->buildNodeCompositeTreeFromStuctureDescription($structure, $root_node);

        $children = $root_node->getAllChildren();
        $names = $this->getNameOfAllChildrenOfANode($children);


        $this->assertEquals(1, count($children));
        $this->assertTrue(in_array('test', $names));
    }

    /**
     * @covers Class::Method
     */
    public function testBuildTreeFromStructureHaving0Element()
    {
        $structure = array();
        $root_node = new FolderNode('folder_test');
        $this->skebuilder->buildNodeCompositeTreeFromStuctureDescription($structure, $root_node);

        $children = $root_node->getAllChildren();
        $names = $this->getNameOfAllChildrenOfANode($children);


        $this->assertEquals(0, count($children));
        $this->assertFalse(in_array('test', $names));
    }

    /**
     * @covers Class::Method
     */
    public function testBuildTreeFromStructureHaving1FileElement()
    {
        $structure = array('test.php');
        $root_node = new FolderNode('folder_test');
        $this->skebuilder->buildNodeCompositeTreeFromStuctureDescription($structure, $root_node);

        $children = $root_node->getAllChildren();
        $names = $this->getNameOfAllChildrenOfANode($children);


        $this->assertEquals(1, count($children));
        $this->assertTrue(in_array('test.php', $names));
    }

      /**
     * @covers Class::Method
     */
    public function testBuildTreeFromStructureHaving1FileElementWithTemplate()
    {
        $structure = array('test.php:phpfox/phpfox_block_class.php');
        $root_node = new FolderNode('folder_test');
        $this->skebuilder->buildNodeCompositeTreeFromStuctureDescription($structure, $root_node);

        $children = $root_node->getAllChildren();
        $names = $this->getNameOfAllChildrenOfANode($children);


        $this->assertEquals(1, count($children));
        $this->assertTrue(in_array('test.php', $names));
    }

    public function testCreateFolderStructureFromStructureDescription()
    {
        $structure = array('test.php:phpfox' . DIRECTORY_SEPARATOR . 'phpfox_block_class.php');
        $root_node = new FolderNode('folder_test');
        $this->skebuilder->buildNodeCompositeTreeFromStuctureDescription($structure, $root_node);
        $root_node->create(SKEBUILDER_UNITTEST_EXPERIMENT_DIR);
    }


    public function testCreateFolderStructureFromStructureDescriptionOfPhpfox()
    {
        $skeleton = new Skeleton();
        $structure = $skeleton->getSkeleton('phpfox');

        $root_node = new FolderNode('folder_test');

        $this->skebuilder->buildNodeCompositeTreeFromStuctureDescription($structure, $root_node);
        $root_node->create(SKEBUILDER_UNITTEST_EXPERIMENT_DIR);
    }


    
}
